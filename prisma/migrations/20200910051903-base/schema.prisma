generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url = "***"
}

model enroll {
    id        Int           @default(autoincrement()) @id
    userId    Int
    createdAt DateTime      @default(now())
    type      enroll_type   @default(FREE_TO_PREMIUM)
    method    enroll_method @default(NONE)
    user      user          @relation(fields: [userId], references: [id])

    @@index([userId], name: "userId")
}

model group {
    id            Int             @default(autoincrement()) @id
    createdAt     DateTime        @default(now())
    updatedAt     DateTime        @default(now())
    creatorId     Int
    name          String
    user          user            @relation(fields: [creatorId], references: [id])
    usersongroups usersongroups[]

    @@index([creatorId], name: "creatorId")
}

model invitation {
    id                           Int               @default(autoincrement()) @id
    createdAt                    DateTime          @default(now())
    fromId                       Int
    toId                         Int
    status                       invitation_status @default(WAITING)
    user_invitation_fromIdTouser user              @relation("invitation_fromIdTouser", fields: [fromId], references: [id])
    user_invitation_toIdTouser   user              @relation("invitation_toIdTouser", fields: [toId], references: [id])

    @@index([fromId], name: "fromId")
    @@index([toId], name: "toId")
}

model user {
    id                                 Int               @default(autoincrement()) @id
    createdAt                          DateTime          @default(now())
    email                              String            @unique
    name                               String
    password                           String
    isPremium                          Boolean           @default(false)
    role                               user_role         @default(USER)
    registration                       user_registration @default(EMAIL)
    enroll                             enroll[]
    group                              group[]
    invitation_invitation_fromIdTouser invitation[]      @relation("invitation_fromIdTouser")
    invitation_invitation_toIdTouser   invitation[]      @relation("invitation_toIdTouser")
    usersongroups                      usersongroups[]
}

model usersongroups {
    userId    Int
    groupId   Int
    createdAt DateTime           @default(now())
    role      usersongroups_role @default(NORMAL)
    group     group              @relation(fields: [groupId], references: [id])
    user      user               @relation(fields: [userId], references: [id])

    @@id([userId, groupId])
    @@index([groupId], name: "groupId")
}

enum enroll_type {
    FREE_TO_PREMIUM
    PREMIUM_TO_FREE
}

enum enroll_method {
    NONE
    CARD
    PAYPAL
}

enum invitation_status {
    ACCEPTED
    DECLINED
    WAITING
}

enum user_role {
    USER
    ADMIN
}

enum user_registration {
    EMAIL
    GOOGLE
    LINKEDIN
    FACEBOOK
}

enum usersongroups_role {
    ADMIN
    NORMAL
}
